<?xml version="1.0"?>
<doc>
    <assembly>
        <name>crmSeries.API</name>
    </assembly>
    <members>
        <member name="M:crmSeries.Api.Controllers.BranchesController.GetBranches">
            <summary>
            Gets a list of all branches.
            </summary>
        </member>
        <member name="M:crmSeries.Api.Controllers.BranchesController.GetBranchById(System.Int32)">
            <summary>
            Gets a branch entity based on the given id.
            </summary>
            <param name="id">The unique identifier of the branch.</param>
        </member>
        <member name="M:crmSeries.Api.Controllers.CompanyCategoriesController.GetCompanyCategories">
            <summary>
            Gets a list of all company categories.
            </summary>
        </member>
        <member name="M:crmSeries.Api.Controllers.CompanyCategoriesController.GetCompanyCategoryById(System.Int32)">
            <summary>
            Gets a company category entity based on the given id.
            </summary>
            <param name="id">The unique identifier of the company category.</param>
        </member>
        <member name="M:crmSeries.Api.Controllers.CompanyRanksController.GetCompanyRanks">
            <summary>
            Gets a list of all company ranks.
            </summary>
        </member>
        <member name="M:crmSeries.Api.Controllers.CompanyRanksController.GetCompanyRankById(System.Int32)">
            <summary>
            Gets a company rank entity based on the given id.
            </summary>
            <param name="id">The unique identifier of the company rank.</param>
        </member>
        <member name="M:crmSeries.Api.Controllers.CompanyRecordTypesController.GetCompanyRecordTypes">
            <summary>
            Gets a list of all company record types.
            </summary>
        </member>
        <member name="M:crmSeries.Api.Controllers.CompanyRecordTypesController.GetCompanyRecordTypeById(System.Int32)">
            <summary>
            Gets a company record type entity based on the given id.
            </summary>
            <param name="id">The unique identifier of the company record type.</param>
        </member>
        <member name="M:crmSeries.Api.Controllers.CompanySourcesController.GetCompanySources">
            <summary>
            Gets a list of all company sources.
            </summary>
        </member>
        <member name="M:crmSeries.Api.Controllers.CompanySourcesController.GetCompanySourceById(System.Int32)">
            <summary>
            Gets a company source entity based on the given id.
            </summary>
            <param name="id">The unique identifier of the company source.</param>
        </member>
        <member name="M:crmSeries.API.Controllers.CompaniesController.GetPagedCompanies(crmSeries.Core.Logic.Queries.PagedQueryRequest)">
            <summary>
            Gets a paged list of companies assigned to the current user.
            </summary>
            <param name="pagedQuery">Contains information for the current page and page count.</param>
        </member>
        <member name="M:crmSeries.API.Controllers.CompaniesController.GetCompaniesFull">
            <summary>
            Gets a list of all companies assigned to the current user including all addresses and contacts.
            </summary>
        </member>
        <member name="M:crmSeries.API.Controllers.CompaniesController.GetPagedCompaniesFull(crmSeries.Core.Logic.Queries.PagedQueryRequest)">
            <summary>
            Gets a paged list of all companies assigned to the current user including all addresses and contacts.
            </summary>
            <param name="pagedQuery">Contains information for the current page and page count.</param>
        </member>
        <member name="M:crmSeries.API.Controllers.CompaniesController.GetPagedAllCompanies(crmSeries.Core.Logic.Queries.PagedQueryRequest)">
            <summary>
            Gets a paged list of all companies.
            </summary>
        </member>
        <member name="M:crmSeries.API.Controllers.CompaniesController.GetPagedAllCompaniesFull(crmSeries.Core.Logic.Queries.PagedQueryRequest)">
            <summary>
            Gets a paged list of all companies including all addresses and contacts.
            </summary>
        </member>
        <member name="M:crmSeries.API.Controllers.CompaniesController.GetCompany(System.Int32)">
            <summary>
            Gets a single company by id.
            </summary>
            <param name="id">The id of the company.</param>
        </member>
        <member name="M:crmSeries.API.Controllers.CompaniesController.GetCompanyFull(System.Int32)">
            <summary>
            Gets a single company by id including all addresses and contacts.
            </summary>
            <param name="id">The id of the company.</param>
        </member>
        <member name="M:crmSeries.API.Controllers.CompaniesController.Post(crmSeries.Core.Features.Companies.AddCompanyRequest)">
            <summary>
            Adds a company object based on the data in the request.
            </summary>
        </member>
        <member name="M:crmSeries.API.Controllers.CompaniesController.Edit(crmSeries.Core.Features.Companies.EditCompanyRequest)">
            <summary>
            Updates a company object based on the data in the request.
            </summary>
        </member>
        <member name="M:crmSeries.API.Controllers.CompaniesController.Delete(System.Int32)">
            <summary>
            Sets the company to deleted.
            </summary>
            <param name="id">The unique identifier of the contact</param>
        </member>
        <member name="M:crmSeries.API.Controllers.ContactsController.GetContacts(crmSeries.Core.Logic.Queries.PagedQueryRequest)">
            <summary>
            Gets a list of all contacts assigned to the current user.
            </summary>
            <param name="paginationInfo">The paging information for this request.</param>
        </member>
        <member name="M:crmSeries.API.Controllers.ContactsController.GetFullContacts(crmSeries.Core.Logic.Queries.PagedQueryRequest)">
            <summary>
            Gets a list of all contacts assigned to the current user with all properties set.
            </summary>
            <param name="paginationInfo">The paging information for this request.</param>
        </member>
        <member name="M:crmSeries.API.Controllers.ContactsController.GetContactById(System.Int32)">
            <summary>
            Gets a contact entity based on the contact entity's contact id.
            </summary>
            <param name="id">The unique identifier of the contact.</param>
        </member>
        <member name="M:crmSeries.API.Controllers.ContactsController.GetFullContactById(System.Int32)">
            <summary>
            Gets a contact entity based on the contact entity's contact id with all properties set.
            </summary>
            <param name="id">The unique identifier of the contact.</param>
        </member>
        <member name="M:crmSeries.API.Controllers.ContactsController.Post(crmSeries.Core.Features.Contacts.AddContactRequest)">
            <summary>
            Adds a contact object based on the data in the request.
            </summary>
        </member>
        <member name="M:crmSeries.API.Controllers.ContactsController.Edit(crmSeries.Core.Features.Contacts.EditContactRequest)">
            <summary>
            Updates a contact object based on the data in the request.
            </summary>
        </member>
        <member name="M:crmSeries.API.Controllers.ContactsController.Delete(System.Int32)">
            <summary>
            Sets the contact to deleted.
            </summary>
            <param name="id">The unique identifier of the contact</param>
        </member>
        <member name="M:crmSeries.API.Controllers.InventoryController.Get(crmSeries.Core.Features.Inventory.GetInventoryRequest)">
            <summary>
            Gets inventory equipment based on search criteria. 
            </summary>
        </member>
        <member name="M:crmSeries.API.Controllers.InventoryController.GetStatuses">
            <summary>
            Gets inventory equipment statuses for this dealer. 
            </summary>
        </member>
        <member name="M:crmSeries.API.Controllers.LeadsController.Post(crmSeries.Core.Features.Leads.AddLeadRequest)">
            <summary>
            Adds a Lead to the system.
            </summary>
            <param name="addLeadRequest">The AddLeadRequest object.</param>
            <remarks>Along with name, this API requires that either phone number or E-Mail be passed into the
            request.</remarks>
        </member>
        <member name="M:crmSeries.API.Controllers.NotesController.GetNotes(crmSeries.Core.Logic.Queries.PagedQueryRequest)">
            <summary>
            Gets a list of all notes assigned to current user (????????)
            </summary>
            <param name="paginationInfo">The paging information for this request.</param>
        </member>
        <member name="M:crmSeries.API.Controllers.NotesController.GetNoteTypes">
            <summary>
            Gets the different types of notes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:crmSeries.API.Controllers.NotesController.GetNotePurposes">
            <summary>
            Gets the different purposes of notes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:crmSeries.API.Controllers.NotesController.GetNoteById(System.Int32)">
            <summary>
            Gets a Notes entity based on the Note entity's Note id.
            </summary>
            <param name="id">The unique identifier of the note.</param>
        </member>
        <member name="M:crmSeries.API.Controllers.NotesController.Post(crmSeries.Core.Features.Notes.AddNoteRequest)">
            <summary>
            Adds a Note object based on the data in the request.
            </summary>
        </member>
        <member name="M:crmSeries.API.Controllers.NotesController.Edit(crmSeries.Core.Features.Notes.EditNoteRequest)">
            <summary>
            Updates a Note object based on the data in the request.
            </summary>
        </member>
        <member name="M:crmSeries.API.Controllers.NotesController.Delete(System.Int32)">
            <summary>
            Sets the Note to deleted.
            </summary>
            <param name="id">The unique identifier of the Note</param>
        </member>
        <member name="M:crmSeries.API.Controllers.RelatedRecordsController.Get">
            <summary>
            Gets the different related records.
            </summary>
        </member>
        <member name="M:crmSeries.API.Controllers.RelatedRecordsController.GetName(System.Int32,System.String)">
            <summary>
            Gets the name of the related record.  This will vary depending on the type of the related
            record type.
            </summary>
            <param name="relatedRecordTypeId">The identifier of the related record type.</param>
            <param name="relatedRecordType">The type of the related record.</param>
        </member>
        <member name="M:crmSeries.API.Controllers.TasksController.GetTasks(crmSeries.Core.Logic.Queries.PagedQueryRequest)">
            <summary>
            Gets a list of all tasks assigned to the current user.
            </summary>
            <param name="paginationInfo">The paging information for this request.</param>
        </member>
        <member name="M:crmSeries.API.Controllers.TasksController.GetTaskById(System.Int32)">
            <summary>
            Gets a tasks entity based on the task entity's task id.
            </summary>
            <param name="id">The unique identifier of the task.</param>
        </member>
        <member name="M:crmSeries.API.Controllers.TasksController.GetTaskStatuses">
            <summary>
            Gets all valid task statuses.
            </summary>
        </member>
        <member name="M:crmSeries.API.Controllers.TasksController.GetTaskPriorities">
            <summary>
            Gets all valid task priorities.
            </summary>
        </member>
        <member name="M:crmSeries.API.Controllers.TasksController.Post(crmSeries.Core.Features.Tasks.AddTaskRequest)">
            <summary>
            Adds a task object based on the data in the request.
            </summary>
        </member>
        <member name="M:crmSeries.API.Controllers.TasksController.Edit(crmSeries.Core.Features.Tasks.EditTaskRequest)">
            <summary>
            Updates a task object based on the data in the request.
            </summary>
        </member>
        <member name="M:crmSeries.API.Controllers.TasksController.Delete(System.Int32)">
            <summary>
            Sets the task to deleted.
            </summary>
            <param name="id">The unique identifier of the task</param>
        </member>
        <member name="M:crmSeries.API.Controllers.TemplatesController.ListTemplates">
            <summary>
            Retrieves a list of available DocuSign templates
            </summary>
            <returns>List of available templates</returns>
        </member>
        <member name="M:crmSeries.API.Controllers.TemplatesController.SendTemplate(crmSeries.Core.Features.DocuSign.SendTemplateRequest)">
            <summary>
            Emails a DocuSign template to a chain of signatories
            </summary>
            <param name="request">The SendTemplateRequest request object</param>
        </member>
    </members>
</doc>
